C51 COMPILER V9.01   COMMON                                                                08/18/2023 11:33:04 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE COMMON
OBJECT MODULE PLACED IN .\obj\Common.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\..\KERNEL\SYSTEM\Common.c OPTIMIZE(SIZE) BROWSE INCDIR(..\..\DRIVER\INC;
                    -..\..\KERNEL\SCALER\INC;..\..\KERNEL\SYSTEM\INC;..\..\LIB\INC;..\..\PANEL\INC;..\..\BOARD;..\..\DRIVER\INC;..\..\KERNEL\
                    -SYSTEM\INC\AOC2011;..\..\DRIVER\extDEVICE\INC;..\..\MODEL;..\..\CONFIG;..\..\PANEL;..\..\UI\F_LOGO\INC;..\..\UI\HkcOsd\I
                    -NC) DEFINE(ModelName=JRY_TESTBOARD_C_BOARD) DEBUG OBJECTEXTEND PRINT(.\list\Common.lst) OBJECT(.\obj\Common.obj)

line level    source

   1          #include "board.h"
*** MESSAGE C320 IN LINE 337 OF ..\..\CONFIG\BOARD.H: "Please remember to disable the debug function!" 
   2          #include "types.h"
   3          #include "debugDef.h"
   4          #include "global.h"
   5          #include "ms_reg.h"
   6          #include "ms_rwreg.h"
   7          #include "misc.h"
   8          
   9          
  10          // 121026 coding modified to prevent debug message abnormally when mcu clock change
  11          void putSIOChar(unsigned char sendData)
  12          {
  13   1      #if 1
  14   1              if( ES == 0 )
  15   1              return;
  16   1              
  17   1              SBUF = sendData;
  18   1              while( 1 )
  19   1              {
  20   2                  if( EA && ES )
  21   2                  {
  22   3                      if( TI0_FLAG )
  23   3                      {
  24   4                          TI0_FLAG = 0;
  25   4                          break;
  26   4                      }
  27   3                  }
  28   2                  else
  29   2                  {
  30   3                      if( TI )
  31   3                      {
  32   4                          TI = 0;
  33   4                          break;
  34   4                      }
  35   3                  }
  36   2              }
  37   1      #else
                  if(!ES)
                      return;
              
                  
                  //while(!TI0_FLAG);
                  //TI0_FLAG = 0;
                  //SBUF = sendData;
              
                  SBUF = sendData;
                  while(1)
                  {
                      if(TI0_FLAG)
                      {
                          TI0_FLAG = 0;
C51 COMPILER V9.01   COMMON                                                                08/18/2023 11:33:04 PAGE 2   

                          break;
                      }
                  }
              #endif    
  56   1      }
  57          
  58          
  59          
  60          #if DEBUG_MSG
  61              void printMsg(char *str)
  62          {
  63   1              char sendData;
  64   1              sendData = Send_Msg;
  65   1              while (sendData)
  66   1              //!='\0')
  67   1              {
  68   2                  putSIOChar((unsigned char)sendData);
  69   2                  sendData = *(str++);
  70   2              }
  71   1              putSIOChar(0xd);
  72   1              putSIOChar((char)'\n');
  73   1          }
  74          
  75          #endif
  76          
  77          #if DEBUG_PRINTDATA
  78              void printData(char *str, WORD value)
  79              {
  80   1              char sendData = Send_MsgValue;
  81   1              #if 0
                          putSIOChar(Send_MsgValue);
                          putSIOChar(value >> 8);
                          putSIOChar(value &0xFF);
                      #endif 
  86   1              while (sendData = *(str++))
  87   1              {
  88   2                  if (sendData == (char)'%')
  89   2                  // %
  90   2                  {
  91   3                      sendData = *(str++);
  92   3                      if (sendData == (char)'d' || sendData == (char)'x')
  93   3                      // d
  94   3                      {
  95   4                          if (value)
  96   4                          {
  97   5                              Bool noneZero = FALSE;
  98   5                              WORD divider = 10000;
  99   5                              char dispValue;
 100   5                              if (sendData == (char)'x')
 101   5                              {
 102   6                                  divider = 0x1000;
 103   6                              }
 104   5                              while (divider)
 105   5                              {
 106   6                                  dispValue = value / divider;
 107   6                                  value -= dispValue * divider;
 108   6                                  if (dispValue)
 109   6                                  {
 110   7                                      noneZero = TRUE;
 111   7                                  }
 112   6                                  if (noneZero)
 113   6                                  {
C51 COMPILER V9.01   COMMON                                                                08/18/2023 11:33:04 PAGE 3   

 114   7                                      if (dispValue > 9)
 115   7                                      {
 116   8                                          dispValue += 55;
 117   8                                      }
 118   7                                      else
 119   7                                      {
 120   8                                          dispValue += 0x30;
 121   8                                      }
 122   7                                      putSIOChar(dispValue);
 123   7                                  }
 124   6                                  if (sendData == (char)'d')
 125   6                                  {
 126   7                                      divider /= 10;
 127   7                                  }
 128   6                                  else
 129   6                                  {
 130   7                                      divider /= 0x10;
 131   7                                  }
 132   6                              }
 133   5                          }
 134   4                          else
 135   4                          {
 136   5                              putSIOChar('0');
 137   5                          }
 138   4                      }
 139   3                  }
 140   2                  else
 141   2                  {
 142   3                      putSIOChar(sendData);
 143   3                  }
 144   2              }
 145   1              putSIOChar(0xd);
 146   1              putSIOChar((char)'\n');
 147   1          }
 148          
 149          #endif 
 150          
 151          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    286    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
