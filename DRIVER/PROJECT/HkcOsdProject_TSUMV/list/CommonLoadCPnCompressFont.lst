C51 COMPILER V9.01   COMMONLOADCPNCOMPRESSFONT                                             08/17/2023 10:54:59 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE COMMONLOADCPNCOMPRESSFONT
OBJECT MODULE PLACED IN .\obj\CommonLoadCPnCompressFont.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\..\UI\HkcOsd\CommonLoadCPnCompressFont.c OPTIMIZE(SIZE) BROWSE INCDIR(..
                    -\..\DRIVER\INC;..\..\KERNEL\SCALER\INC;..\..\KERNEL\SYSTEM\INC;..\..\LIB\INC;..\..\PANEL\INC;..\..\BOARD;..\..\DRIVER\IN
                    -C;..\..\KERNEL\SYSTEM\INC\AOC2011;..\..\DRIVER\extDEVICE\INC;..\..\MODEL;..\..\CONFIG;..\..\PANEL;..\..\UI\F_LOGO\INC;..
                    -\..\UI\HkcOsd\INC) DEFINE(ModelName=MODEL_T24_TCL) DEBUG OBJECTEXTEND PRINT(.\list\CommonLoadCPnCompressFont.lst) OBJECT
                    -(.\obj\CommonLoadCPnCompressFont.obj)

line level    source

   1          #include "global.h"
*** MESSAGE C320 IN LINE 337 OF ..\..\CONFIG\BOARD.H: "Please remember to disable the debug function!" 
   2          #include "msosd.h"
   3          #include "drvosd.h"
   4          
   5          #include "Extlib.h"
   6          
   7          extern  xdata BYTE  OsdFontColor;
   8          
   9          #if CHIP_ID >= CHIP_TSUMV
  10          
  11          void Load256ColorPalette(BYTE u8Group, BYTE u8Addr, ColorPaletteType *colorPtr, WORD u16Num)
  12          {
  13   1      #if CHIP_ID>=CHIP_TSUM2
                       WORD xdata i;
                  if (u8Group==0)
                      WRITE_PSRAM0_ADDR();
                  else
                      WRITE_PSRAM1_ADDR();
                  //write R/G/B
                  msWriteByte(OSD1_66, u8Addr);
                  if (u8Group==0)
                      WRITE_PSRAM0_COLOR();
                  else
                      WRITE_PSRAM1_COLOR();
                      
                  for (i=0;i<u16Num;i++)
                  {
                      msWriteByte(OSD1_66, ((colorPtr+i)->u8Blue));
                      msWriteByte(OSD1_66, ((colorPtr+i)->u8Green));
                      msWriteByte(OSD1_66, ((colorPtr+i)->u8Red));
                  }
              
                  //write colorkey
                  if (u8Group==0)
                      WRITE_PSRAM0_ADDR();
                  else
                      WRITE_PSRAM1_ADDR();
                  msWriteByte(OSD1_66, u8Addr);
                  if (u8Group==0)
                      WRITE_PSRAM0_COLOR_KEY();
                  else
                      WRITE_PSRAM0_COLOR_KEY();
                  while (u16Num--)
                  {
                      if(colorPtr->u8ColorKey)
                          msWriteByteMask(OSD1_66, BIT0,BIT0);
                      else
                          msWriteByteMask(OSD1_66, 0,BIT0);
                      colorPtr++;
                  }
C51 COMPILER V9.01   COMMONLOADCPNCOMPRESSFONT                                             08/17/2023 10:54:59 PAGE 2   

              
              
              #elif CHIP_ID==CHIP_TSUMV
  54   1      
  55   1          WORD xdata i,u16PSRAM_AddrPort;
  56   1          BYTE u8Bank=msReadByte(OSD1_00);
  57   1          msWriteByte(OSD1_00,0x00);//subbank 0
  58   1          if (u8Group==0)
  59   1              u16PSRAM_AddrPort=OSD1_76;
  60   1          else
  61   1              u16PSRAM_AddrPort=OSD1_86;
  62   1      //u8Addr=0;
  63   1          //write R/G/B
  64   1          msWriteByte(u16PSRAM_AddrPort, u8Addr);
  65   1          for (i=0;i<u16Num;i++)
  66   1          {   
  67   2              msWriteByte(u16PSRAM_AddrPort+2, ((colorPtr+i)->u8Blue));
  68   2              msWriteByte(u16PSRAM_AddrPort+2, ((colorPtr+i)->u8Green));
  69   2              msWriteByte(u16PSRAM_AddrPort+2, ((colorPtr+i)->u8Red));
  70   2          }
  71   1      
  72   1          //write colorkey
  73   1          msWriteByte(u16PSRAM_AddrPort, u8Addr);
  74   1          while (u16Num--)
  75   1          {
  76   2              if(colorPtr->u8ColorKey)
  77   2                  msWriteByteMask(u16PSRAM_AddrPort+3, BIT0,BIT0);
  78   2              else
  79   2                  msWriteByteMask(u16PSRAM_AddrPort+3, 0,BIT0);
  80   2              colorPtr++;
  81   2          }
  82   1          msWriteByte(OSD1_00,u8Bank);//subbank 0
  83   1      
  84   1          #else
                      WORD xdata i;
                      u8Group=0;
                      msWriteByte( OSD2_AC, u8Addr );
                      for (i=0; i<u16Num; i++)
                      {
                              msWriteByte(OSD2_AD, ((colorPtr+i)->u8Red));
                              msWriteByte(OSD2_AD, ((colorPtr+i)->u8Green));
                              msWriteByte(OSD2_AD, ((colorPtr+i)->u8Blue));
                      }
                  #endif
  95   1      }
  96          
  97          #endif
  98          #if CHIP_ID < CHIP_TSUMV
              void Load256ColorPalette(BYTE u8Group, BYTE u8Addr, ColorPaletteType *colorPtr, WORD u16Num)
              {
              #if CHIP_ID>=CHIP_TSUM2
                       WORD xdata i;
                  if (u8Group==0)
                      WRITE_PSRAM0_ADDR();
                  else
                      WRITE_PSRAM1_ADDR();
                  //write R/G/B
                  msWriteByte(OSD1_66, u8Addr);
                  if (u8Group==0)
                      WRITE_PSRAM0_COLOR();
                  else
                      WRITE_PSRAM1_COLOR();
C51 COMPILER V9.01   COMMONLOADCPNCOMPRESSFONT                                             08/17/2023 10:54:59 PAGE 3   

                      
                  for (i=0;i<u16Num;i++)
                  {
                      msWriteByte(OSD1_66, ((colorPtr+i)->u8Blue));
                      msWriteByte(OSD1_66, ((colorPtr+i)->u8Green));
                      msWriteByte(OSD1_66, ((colorPtr+i)->u8Red));
                  }
              
                  //write colorkey
                  if (u8Group==0)
                      WRITE_PSRAM0_ADDR();
                  else
                      WRITE_PSRAM1_ADDR();
                  msWriteByte(OSD1_66, u8Addr);
                  if (u8Group==0)
                      WRITE_PSRAM0_COLOR_KEY();
                  else
                      WRITE_PSRAM0_COLOR_KEY();
                  while (u16Num--)
                  {
                      if(colorPtr->u8ColorKey)
                          msWriteByteMask(OSD1_66, BIT0,BIT0);
                      else
                          msWriteByteMask(OSD1_66, 0,BIT0);
                      colorPtr++;
                  }
              
              
              #elif CHIP_ID==CHIP_TSUMV
              
                  WORD xdata i,u16PSRAM_AddrPort;
                  BYTE u8Bank=msReadByte(OSD1_00);
                  msWriteByte(OSD1_00,0x00);//subbank 0
                  if (u8Group==0)
                      u16PSRAM_AddrPort=OSD1_76;
                  else
                      u16PSRAM_AddrPort=OSD1_86;
              //u8Addr=0;
                  //write R/G/B
                  msWriteByte(u16PSRAM_AddrPort, u8Addr);
                  for (i=0;i<u16Num;i++)
                  {   
                      msWriteByte(u16PSRAM_AddrPort+2, ((colorPtr+i)->u8Blue));
                      msWriteByte(u16PSRAM_AddrPort+2, ((colorPtr+i)->u8Green));
                      msWriteByte(u16PSRAM_AddrPort+2, ((colorPtr+i)->u8Red));
                  }
              
                  //write colorkey
                  msWriteByte(u16PSRAM_AddrPort, u8Addr);
                  while (u16Num--)
                  {
                      if(colorPtr->u8ColorKey)
                          msWriteByteMask(u16PSRAM_AddrPort+3, BIT0,BIT0);
                      else
                          msWriteByteMask(u16PSRAM_AddrPort+3, 0,BIT0);
                      colorPtr++;
                  }
                  msWriteByte(OSD1_00,u8Bank);//subbank 0
              
                  #else
                      WORD xdata i;
                      u8Group=0;
C51 COMPILER V9.01   COMMONLOADCPNCOMPRESSFONT                                             08/17/2023 10:54:59 PAGE 4   

                      msWriteByte( OSD2_AC, u8Addr );
                      for (i=0; i<u16Num; i++)
                      {
                              msWriteByte(OSD2_AD, ((colorPtr+i)->u8Red));
                              msWriteByte(OSD2_AD, ((colorPtr+i)->u8Green));
                              msWriteByte(OSD2_AD, ((colorPtr+i)->u8Blue));
                      }
                  #endif
              }
              
              
              #endif
 187          
 188          
 189          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    367    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
